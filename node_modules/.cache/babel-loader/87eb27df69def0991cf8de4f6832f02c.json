{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"PowerForm\",\n  props: {\n    /**\n     * @description 表单数据\n     * @default {}\n     */\n    formData: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n\n    /**\n     * @description 所有表单项\n     * @default []\n     * @formList-item Attributes 表单项属性介绍\n     * type {string} 表单项组件类型，如 input\n     * label {string} 表单项标签文本\n     * text {string} button组件文案\n     * prop {string} 表单项 model 字段\n     * nativeTag {string} html原生标签，不配置type时可以使用\n     * slotName {string} 表单项插槽名，非必填\n     * options {array} select 组件 options，参照 Element-UI select 组件\n     * colAttrs {object} 删格布局相关，默认每个表单项 span: 6，参照 Element-UI Col Attributes\n     * formItemAttrs {object} 表单项组件属性，参照 Element-UI Form-Item Attributes\n     * attrs {object} 表单项其他属性，参照 Element-UI 对应组件的 Attributes\n     * listeners {object} 表单项事件监听，参照 Element-UI 对应组件的 Events\n     */\n    formList: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n\n    /**\n     * @description 表单验证规则\n     * @default {}\n     */\n    rules: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n\n    /**\n     * @description 行内表单模式\n     * @default true\n     */\n    inline: {\n      type: Boolean,\n      \"default\": true\n    },\n\n    /**\n     * @description 是否开启 描述列表 模式进行展示\n     * @default false\n     */\n    isDesc: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  methods: {\n    // 触发表单验证，参考 Element-UI 的 Form 组件 Form Methods\n    validate: function validate(fn) {\n      this.$refs[\"powerForm\"].validate(fn);\n    },\n    // 重置表单\n    resetFields: function resetFields() {\n      this.$refs[\"powerForm\"].resetFields();\n    },\n    // 对部分表单字段进行校验的方法\n    validateField: function validateField(props, callback) {\n      this.$refs[\"powerForm\"].validateField(props, callback);\n    },\n    // 移除表单项的校验结果。传入待移除的表单项的 prop 属性或者 prop 组成的数组，如不传则移除整个表单的校验结果\n    clearValidate: function clearValidate(props) {\n      this.$refs[\"powerForm\"].clearValidate(props);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;EACAA,iBADA;EAEAC;IACA;AACA;AACA;AACA;IACAC;MACAC,YADA;MAEA;QAAA;MAAA;IAFA,CALA;;IASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC;MACAD,WADA;MAEA;QAAA;MAAA;IAFA,CAzBA;;IA6BA;AACA;AACA;AACA;IACAE;MACAF,YADA;MAEA;QAAA;MAAA;IAFA,CAjCA;;IAqCA;AACA;AACA;AACA;IACAG;MACAH,aADA;MAEA;IAFA,CAzCA;;IA6CA;AACA;AACA;AACA;IACAI;MACAJ,aADA;MAEA;IAFA;EAjDA,CAFA;EAwDAK,IAxDA,kBAwDA;IACA;EACA,CA1DA;EA2DAC;IACA;IACAC,QAFA,oBAEAC,EAFA,EAEA;MACA;IACA,CAJA;IAKA;IACAC,WANA,yBAMA;MACA;IACA,CARA;IASA;IACAC,aAVA,yBAUAZ,KAVA,EAUAa,QAVA,EAUA;MACA;IACA,CAZA;IAaA;IACAC,aAdA,yBAcAd,KAdA,EAcA;MACA;IACA;EAhBA;AA3DA","names":["name","props","formData","type","formList","rules","inline","isDesc","data","methods","validate","fn","resetFields","validateField","callback","clearValidate"],"sourceRoot":"src/components","sources":["PowerForm.vue"],"sourcesContent":["<template>\n  <el-form\n    ref=\"powerForm\"\n    :model=\"formData\"\n    :rules=\"rules\"\n    :inline=\"inline\"\n    class=\"power-form\"\n    v-bind=\"$attrs\"\n    v-on=\"$listeners\"\n  >\n    <template\n      v-for=\"(\n        {\n          type,\n          label,\n          text,\n          prop,\n          nativeTag,\n          slotName,\n          options,\n          colAttrs = { span: 6 },\n          formItemAttrs,\n          attrs,\n          listeners,\n          radioStyle,\n          ...otherProps\n        },\n        index\n      ) in formList\"\n    >\n      <el-col :key=\"prop || index\" v-bind=\"colAttrs\">\n        <el-form-item\n          v-if=\"!isDesc\"\n          :label=\"label\"\n          :prop=\"prop\"\n          v-bind=\"formItemAttrs\"\n        >\n          <!-- 具名插槽，外部组件可以自定义表单项，使用 slotName 指定插槽名. 如果不指定插槽名则使用下方component -->\n          <slot :name=\"slotName\" v-bind=\"formList[index]\">\n            <!-- 动态组件component ，默认使用前缀 el- 拼接 type 的形式，如： el-input el-select -->\n            <!-- el-radio-group不支持component动态渲染, 此处特殊处理 -->\n            <template\n              v-if=\"type === 'radio-group' && options && options.length\"\n            >\n              <el-radio-group\n                v-model=\"formData[prop]\"\n                v-bind=\"attrs\"\n                v-on=\"listeners\"\n              >\n                <component\n                  :is=\"radioStyle === 'button' ? 'el-radio-button' : 'el-radio'\"\n                  v-for=\"(item, idx) in options\"\n                  :key=\"item.label || idx\"\n                  v-bind=\"typeof item === 'object' ? item : { label: item }\"\n                >\n                  {{ item.text }}\n                </component>\n              </el-radio-group>\n            </template>\n            <component\n              :is=\"'el-' + type\"\n              v-else-if=\"type\"\n              v-model=\"formData[prop]\"\n              v-bind=\"attrs\"\n              v-on=\"listeners\"\n            >\n              <template v-if=\"type === 'button'\">{{ label || text }}</template>\n              <template v-if=\"type === 'select' && options && options.length\">\n                <el-option\n                  v-for=\"(item, idx) in options\"\n                  :key=\"item.value || idx\"\n                  v-bind=\"\n                    typeof item === 'object'\n                      ? item\n                      : { label: item, value: item }\n                  \"\n                />\n              </template>\n              <template\n                v-if=\"type === 'checkbox-group' && options && options.length\"\n              >\n                <el-checkbox\n                  v-for=\"(item, idx) in options\"\n                  :key=\"item.label || idx\"\n                  v-bind=\"typeof item === 'object' ? item : { label: item }\"\n                />\n              </template>\n            </component>\n            <template v-else-if=\"nativeTag\">\n              <component :is=\"nativeTag\" v-bind=\"attrs\" v-on=\"listeners\">{{\n                formData[prop]\n              }}</component>\n            </template>\n          </slot>\n        </el-form-item>\n        <template v-else>\n          <slot :name=\"slotName\" v-bind=\"formList[index]\">\n            <div v-show=\"label\" class=\"desc-item\">\n              <span class=\"desc-label\">{{ label }}: </span>\n              <span class=\"desc-value\">{{ formData[prop] }}</span>\n            </div>\n          </slot>\n        </template>\n      </el-col>\n    </template>\n  </el-form>\n</template>\n<script>\nexport default {\n  name: \"PowerForm\",\n  props: {\n    /**\n     * @description 表单数据\n     * @default {}\n     */\n    formData: {\n      type: Object,\n      default: () => ({}),\n    },\n    /**\n     * @description 所有表单项\n     * @default []\n     * @formList-item Attributes 表单项属性介绍\n     * type {string} 表单项组件类型，如 input\n     * label {string} 表单项标签文本\n     * text {string} button组件文案\n     * prop {string} 表单项 model 字段\n     * nativeTag {string} html原生标签，不配置type时可以使用\n     * slotName {string} 表单项插槽名，非必填\n     * options {array} select 组件 options，参照 Element-UI select 组件\n     * colAttrs {object} 删格布局相关，默认每个表单项 span: 6，参照 Element-UI Col Attributes\n     * formItemAttrs {object} 表单项组件属性，参照 Element-UI Form-Item Attributes\n     * attrs {object} 表单项其他属性，参照 Element-UI 对应组件的 Attributes\n     * listeners {object} 表单项事件监听，参照 Element-UI 对应组件的 Events\n     */\n    formList: {\n      type: Array,\n      default: () => [],\n    },\n    /**\n     * @description 表单验证规则\n     * @default {}\n     */\n    rules: {\n      type: Object,\n      default: () => ({}),\n    },\n    /**\n     * @description 行内表单模式\n     * @default true\n     */\n    inline: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * @description 是否开启 描述列表 模式进行展示\n     * @default false\n     */\n    isDesc: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    // 触发表单验证，参考 Element-UI 的 Form 组件 Form Methods\n    validate(fn) {\n      this.$refs[\"powerForm\"].validate(fn);\n    },\n    // 重置表单\n    resetFields() {\n      this.$refs[\"powerForm\"].resetFields();\n    },\n    // 对部分表单字段进行校验的方法\n    validateField(props, callback) {\n      this.$refs[\"powerForm\"].validateField(props, callback);\n    },\n    // 移除表单项的校验结果。传入待移除的表单项的 prop 属性或者 prop 组成的数组，如不传则移除整个表单的校验结果\n    clearValidate(props) {\n      this.$refs[\"powerForm\"].clearValidate(props);\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.power-form {\n  display: flex;\n  flex-wrap: wrap;\n  overflow: auto;\n}\n.el-form--inline {\n  .el-form-item {\n    padding-right: 10px;\n    width: 100%;\n    display: flex;\n    ::v-deep .el-form-item__content {\n      flex: 1;\n      & > div {\n        width: 100%;\n      }\n    }\n  }\n}\n.desc-item {\n  display: flex;\n  margin-bottom: 15px;\n  padding-right: 10px;\n  line-height: 34px;\n  .desc-label {\n    display: inline-block;\n    width: 100px;\n    padding-right: 12px;\n    text-align: right;\n    font-weight: 700;\n    font-size: 14px;\n  }\n  .desc-value {\n    flex: 1;\n    display: inline-block;\n    padding: 0 6px;\n    border: 1px solid #ddd;\n    border-radius: 2px;\n    font-size: 14px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}